%% Background/set up

% requires MUA and FMUT toolboxes:
%1. https://openwetware.org/wiki/Mass_Univariate_ERP_Toolbox
%2. https://github.com/ericcfields/FMUT

experiment_name = 'auditory_MMN'
output_filename = 'MMNproject.GND'

%need to ensure matlab can access python; skip this if matlab already
%has access to python
pyversion C:\Programs\Python\Python37\python
pe = pyenv;
pe.Version

ConfigFileName = 'Config_0822';
Current_File_Path = pwd;
addpath('Functions');
ConfigFilePath = [Current_File_Path filesep 'SupportingDocs' filesep ConfigFileName '.xlsx'];
Options = detectImportOptions(ConfigFilePath);

for k = 1:numel(Options.VariableTypes)
    Options.VariableTypes{k} = 'char';
end

DataConfig = table2struct(readtable(ConfigFilePath, Options));
DataConfig = adjustConfigData(DataConfig);

%% Get .erp files [skip this step if you already have .erp files]
SUB = DataConfig.SUB;
DIR = fileparts(pwd);
Current_File_Path = pwd;

for i = 1:length(SUB)
    
    eeglab; %open EEGlab
    Subject_Path = [DIR filesep num2str(SUB{i}) filesep]; %Define subject path
 
    EEG = pop_loadset('filename',[SUB{i} '_ds_PREP_ica_corr_cbip_elist_bins_epoch_ar.set'],... %take the last dataset file prior to AR (for now)
                      'filepath', Subject_Path);
  
    ERP = pop_averager(EEG , 'Criterion', 'good',... 
                             'DQ_custom_wins', 0,...
                             'DQ_flag', 1,...
                             'DQ_preavg_txt', 0,...
                             'ExcludeBoundary', 'on',...
                             'SEM','on');

    ERP = pop_savemyerp(ERP, 'erpname', [SUB{i} '_erptest'],...
                             'filename', [SUB{i} '_erptest.erp'],...
                             'filepath', Subject_Path,...
                             'Warning', 'on');
end

%% Mass Univariate Analyses: create necessary data structure

%Make sure all EEGLAB functions are on the MATLAB path
[ALLEEG, EEG, CURRENTSET, ALLCOM] = eeglab;
SUB = DataConfig.SUB;
DIR = fileparts(pwd);
Current_File_Path = pwd;

subs = {};
%load all ERP sets into a cell array
for i = 1:length(SUB)
    Subject_Path = [DIR filesep num2str(SUB{i}) filesep];
    subs{i} = [Subject_Path num2str(SUB{i}) '_erptest.erp'];
end

%create data (GND) structure
GND = erplab2GND(subs, ...
                'use_bins', 1:6, ...
                'exclude_chans', {'Mast1','Mast2', 'HEOGleft', 'HEOGright', 'VEOGlow', 'raw HEOG', 'raw VEOG', 'ERG1', 'ERG2', 'corr HEOG', 'corr VEOG'}, ...
                'exp_name', experiment_name, ...
                'out_fname', output_filename);

%additional bins needed for difference waves and analysis of main effects

%difference waves
GND = bin_dif(GND, 1, 3, 'punish deviant - standard'); %bin 7
GND = bin_dif(GND, 2, 3, 'reward deviant - standard'); %bin 8
GND = bin_dif(GND, 4, 6, 'punish control - standard control'); %bin 9
GND = bin_dif(GND, 5, 6, 'reward control - standard control'); %bin 10

%main effects of value/valence (averages conditions together)
GND = bin_mean(GND, 7, 8, 'valued'); %bin 11
GND = bin_mean(GND, 9, 10, 'not valued'); %bin 12
GND = bin_mean(GND, 7, 9, 'punish'); %bin 13
GND = bin_mean(GND, 8, 10, 'reward'); %bin 14

%Downsample from 256Hz to 128Hz using boxcar filter
GND = decimateGND(GND, 2, 'boxcar', [-200 -1], 'yes', 0); %This filter averages together each time point with the surrounding 2 time points

%visualize
gui_erp(GND)

%% Mass Univariate Analyses: running the MUA

%Make sure all EEGLAB functions are on the MATLAB path
[ALLEEG, EEG, CURRENTSET, ALLCOM] = eeglab;

%Load GND file
GND_file = [Current_File_Path filesep output_filename];
load(GND_file, '-mat');

%Define some variables
n_perm = 1e4;
chanlocs = GND.chanlocs;
max_dist = 61
chan_hood=spatial_neighbors(chanlocs,max_dist); %this determines threshold for neighbouring of electrodes

%if you want to be more selective with time window/electrode selection...
MMN_time_wind = [100 200];
P3a_time_wind = [200 300];
MMN_channels = {'Fz', 'FC1', 'FC2', 'Cz'};
P3a_channels = {'Cz', 'Pz', 'CP1', 'CP2'};

%2 x 2 within-subject ANOVA [all channels, all time points]
GND = FclustGND(GND, ...
                'bins', 7:10, ...  
                'factor_names', {'value', 'valence'}, ...  
                'factor_levels', [2, 2], ...
                'mean_wind', 'no',...
                'chan_hood', chan_hood, ...
                'n_perm', n_perm, ...
                'plot_raster', 'no',...
                'save_GND', 'yes', ...
                'output_file', 'MMNproject_factorial.xlsx');

F_sig_raster(GND, 1,...
             'effect', 'valueXvalence'); %plot significant F values for interaction term
         
%2 x 2 within-subject ANOVA [MMN channels only]
GND = FclustGND(GND, ...
                'bins', 7:10, ...  
                'factor_names', {'value', 'valence'}, ...  
                'factor_levels', [2, 2], ...
                'mean_wind', 'no',...
                'include_chans', MMN_channels, ...
                'chan_hood', chan_hood, ...
                'n_perm', n_perm, ...
                'plot_raster', 'no',...
                'save_GND', 'yes', ...
                'output_file', 'MMN_factorial.xlsx');
                
F_sig_raster(GND, 2,...
             'effect', 'valueXvalence'); %plot significant F values for interaction term

%2 x 2 within-subject ANOVA [P3a channels only]
GND = FclustGND(GND, ...
                'bins', 7:10, ...  
                'factor_names', {'value', 'valence'}, ...  
                'factor_levels', [2, 2], ...
                'mean_wind', 'no',...
                'include_chans', P3a_channels, ...
                'chan_hood', chan_hood, ...
                'n_perm', n_perm, ...
                'plot_raster', 'no',...
                'save_GND', 'yes', ...
                'output_file', 'P3a_factorial.xlsx');
                
F_sig_raster(GND, 3,...
             'effect', 'valueXvalence'); %plot significant F values for interaction term

           
%% Pair-wise follow-ups for main effects [MMN]

%Main effect of Value (Valued vs Not valued)
GND = FclustGND(GND, 'bins', [11, 12], ...  
                'factor_names', 'Value', ...  
                'factor_levels', 2, ...
                'include_chans', MMN_channels, ...
                'chan_hood', chan_hood, ...
                'n_perm', n_perm, ...
                'plot_raster', 'no',...
                'save_GND', 'yes', ...
                'output_file', 'MMN_Value.xlsx');
            
%Main effect of Valence (Punish vs Reward)
GND = FclustGND(GND, 'bins', [13, 14], ...  
                'factor_names', 'Valence', ...  
                'factor_levels', 2, ...
                'include_chans', MMN_channels, ...
                'chan_hood', chan_hood, ...
                'n_perm', n_perm, ...
                'plot_raster', 'no',...
                'save_GND', 'yes', ...
                'output_file', 'MMN_Valence.xlsx');

%% Pair-wise follow-ups for main effects [p3a]

%Main effect of Value (Valued vs Not valued)
GND = FclustGND(GND, 'bins', [11, 12], ...  
                'factor_names', 'Value', ...  
                'factor_levels', 2, ...
                'include_chans', P3a_channels, ...
                'chan_hood', chan_hood, ...
                'n_perm', n_perm, ...
                'plot_raster', 'no',...
                'save_GND', 'yes', ...
                'output_file', 'P3a_Value.xlsx');
            
%Main effect of Valence (Punish vs Reward)
GND = FclustGND(GND, 'bins', [13, 14], ...  
                'factor_names', 'Valence', ...  
                'factor_levels', 2, ...
                'include_chans', P3a_channels, ...
                'chan_hood', chan_hood, ...
                'n_perm', n_perm, ...
                'plot_raster', 'no',...
                'save_GND', 'yes', ...
                'output_file', 'P3a_Valence.xlsx');
